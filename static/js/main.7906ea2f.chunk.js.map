{"version":3,"sources":["counter.js","reducers/scoreReducer.js","reducers/pointReducer.js","components/PlayButton.js","components/Header.js","components/ResetProgress.js","components/Points.js","App.js","reducers/notificationReducer.js","index.js"],"names":["baseUrl","click","a","axios","post","res","data","addScore","addition","score","parseInt","window","localStorage","getItem","setItem","type","scoreReducer","state","action","pointReducer","concat","filter","point","id","pointId","PlayButton","setModalOpen","dispatch","useDispatch","useSelector","play","counter","prize","message","clicksToWin","notiId","shortid","generate","setTimeout","participationPoint","value","prizePoint","style","position","left","top","className","onClick","Header","notifications","Grid","Row","columns","Column","length","textAlign","ResetProgress","modalOpen","Modal","basic","size","open","Content","Actions","Button","color","inverted","Icon","name","Points","points","negative","positive","marginTop","floated","width","map","key","onAnimationEnd","App","useState","useEffect","console","log","initScore","Container","notificationReducer","noti","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7906ea2f.chunk.js","sourcesContent":["import axios from 'axios'\n\nlet baseUrl = ''\n\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://cryptic-cliffs-66031.herokuapp.com'\n}\n\nconst click = async () => {\n  const res = await axios.post(`${baseUrl}/counter/click`)\n  return res.data\n}\n\nexport default {\n  click\n}","const scoreReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_SCORE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initScore = () => {\n  const score = parseInt(window.localStorage.getItem('userScore'))\n  if (!score && score !== 0) {\n    console.log('scoreksi laitetaan 20')\n    window.localStorage.setItem('userScore', 20)\n  }\n\n  return {\n    type: 'SET_SCORE',\n    data: !score && score !== 0 ? 20 : score\n  }\n}\n\nexport const addScore = (addition) => {\n  const score = parseInt(window.localStorage.getItem('userScore'))\n  window.localStorage.setItem('userScore', score ? score + addition : 20 + addition)\n\n  return {\n    type: 'SET_SCORE',\n    data: score ? score + addition : 20\n  }\n}\n\nexport default scoreReducer","import counter from '../counter'\nimport shortid from 'shortid'\nimport { addScore } from './scoreReducer'\n\nconst pointReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_POINT':\n      return state.concat(action.data)\n    case 'REMOVE_POINT':\n      return state.filter(point => point.id !== action.pointId)\n    default:\n      return state\n  }\n}\n\nexport const addPoint = () => {\n  return async dispatch => {\n    const res = await counter.click()\n    const prize = res.prize\n\n    //Change the score of the player\n    dispatch(addScore(prize - 1))\n\n    //Set a notification about the win or how many clicks left\n    const message = prize === 0\n      ? `${res.clicksToWin} clicks to a prize!`\n      : `You won ${prize} points!`\n\n    const notiId = shortid.generate()\n    dispatch({ type: 'ADD_NOTIFICATION', data: { message, id: notiId } })\n\n    //Remove the notification after 3 sec\n    setTimeout(() => {\n      dispatch({ type: 'REMOVE_NOTIFICATION', notiId })\n    }, 3000)\n\n    //the point for playing which is always -1\n    const participationPoint = {\n      value: -1,\n      id: shortid.generate(),\n    }\n    dispatch({\n      type: 'ADD_POINT',\n      data: participationPoint\n    })\n\n    //dispatch another point if the player actually wins something\n    if (prize > 0) {\n      const prizePoint = {\n        value: prize,\n        id: shortid.generate(),\n      }\n      dispatch({\n        type: 'ADD_POINT',\n        data: prizePoint\n      })\n\n    }\n  }\n}\n\nexport default pointReducer","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addPoint } from '../reducers/pointReducer'\n\nconst PlayButton = ({ setModalOpen }) => {\n  const dispatch = useDispatch()\n  const score = useSelector(state => state.score)\n\n  const play = async () => {\n    dispatch(addPoint())\n  }\n\n  return (\n    <div\n      style={{ position: 'absolute', left: '50%', top: '30%' }}\n    >\n      <button\n        className='playButton'\n        onClick={score > 0 ? play : () => setModalOpen(true)}\n      >\n        PLAY\n      </button>\n    </div>\n  )\n}\n\nexport default PlayButton","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nconst Header = () => {\n  const notifications = useSelector(state => state.notifications)\n  const score = useSelector(state => state.score)\n\n  return (\n    <Grid>\n      <Grid.Row\n        columns={3}\n      >\n        <Grid.Column>\n          <h1>\n            Clicker\n          </h1>\n        </Grid.Column>\n        <Grid.Column>\n          {notifications.length > 0 && (\n            <div\n              className='notification'\n            >\n              {notifications[notifications.length - 1].message}\n            </div>\n          )}\n        </Grid.Column>\n        <Grid.Column>\n          <h1\n            style={{ textAlign: 'right' }}\n          >\n            Score: {score}\n          </h1>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid >\n  )\n}\n\nexport default Header","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Modal, Button, Icon } from 'semantic-ui-react'\n\nconst ResetProgress = ({ modalOpen, setModalOpen }) => {\n  const dispatch = useDispatch()\n\n  return (\n    <Modal\n      basic\n      size=\"small\"\n      open={modalOpen}\n    >\n      <Modal.Header>\n        Reset progress?\n      </Modal.Header>\n      <Modal.Content>\n        <p>\n          Oh no...looks like you are all out of points. Would you like to reset\n          your progress?\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => setModalOpen(false)}\n          basic\n          color=\"red\"\n          inverted\n        >\n          <Icon\n            name=\"remove\"\n          />\n          No\n        </Button>\n        <Button\n          onClick={() => { dispatch({ type: 'SET_SCORE', data: 20 }); setModalOpen(false) }}\n          color=\"green\"\n          inverted\n        >\n          <Icon\n            name=\"checkmark\"\n          />\n          Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default ResetProgress","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\n\n\nconst Points = () => {\n  const dispatch = useDispatch()\n  const points = useSelector(state => state.points)\n\n  const negative = points.filter(point => point.value < 0)\n  const positive = points.filter(point => point.value > 0)\n\n  return (\n    <Grid>\n      <Grid.Row\n        columns={2}\n        style={{ marginTop: '100px' }}\n      >\n        <Grid.Column\n          floated='left'\n          width={4}\n        >\n          {negative.map(point => (\n            <div\n              key={point.id}\n              className='animationWrapper'\n            >\n              <h2\n                className='score'\n                style={{ color: 'red' }}\n                onAnimationEnd={() => dispatch({ type: 'REMOVE_POINT', pointId: point.id })}\n              >\n                {point.value}\n              </h2>\n            </div>\n          )\n          )}\n        </Grid.Column>\n        <Grid.Column\n          floated='right'\n          width={4}\n        >\n          {positive.map(point => (\n            <div\n              key={point.id}\n              className='animationWrapper'\n            >\n              <h2\n                className='score'\n                style={{ color: 'green' }}\n                onAnimationEnd={() => dispatch({ type: 'REMOVE_POINT', pointId: point.id })}\n              >\n                {point.value}\n              </h2>\n            </div>\n          )\n          )}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default Points","import React, { useEffect, useState } from 'react'\nimport { Container } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport { initScore } from './reducers/scoreReducer'\nimport './App.css'\nimport PlayButton from './components/PlayButton'\nimport Header from './components/Header'\nimport ResetProgress from './components/ResetProgress'\nimport Points from './components/Points'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const [modalOpen, setModalOpen] = useState(false)\n\n  useEffect(() => {\n    dispatch(initScore())\n  }, [dispatch])\n\n\n  return (\n    <Container>\n      <PlayButton setModalOpen={setModalOpen} />\n      <Header />\n      <ResetProgress modalOpen={modalOpen} setModalOpen={setModalOpen} />\n      <Points />\n    </Container >\n  )\n}\n\nexport default App\n","const notificationReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return state.concat(action.data)\n    case 'REMOVE_NOTIFICATION':\n      return state.filter(noti => noti.id !== action.notiId)\n    default:\n      return state\n  }\n}\n\nexport default notificationReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport pointReducer from './reducers/pointReducer'\nimport App from './App'\nimport scoreReducer from './reducers/scoreReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  points: pointReducer,\n  score: scoreReducer,\n  notifications: notificationReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}